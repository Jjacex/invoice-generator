<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Categories</title>
    <%- include('../partials/styles.ejs') %>
</head>
<body NODE_ENV="<%=NODE_ENV%>">


    <div id="category_page_container">

        <%- include('../partials/navbar.ejs') %>

        <div id="category_form_container">
            <form id="category_form" class="form_styles_general" action="/category/addCategory" method="POST">
                <h2 class="form_header">Add an Expense Category</h2>
                <label class="form_label" for="category_name">Category Name</label>
                <input class="form_input" type="text" name="category_name">
                <input type="hidden" name="_csrf" value=<%=csrfToken%>>
                <div class="form_button_container">
                    <button class="form_button">
                        <p class="form_button_text">Add</p>
                        <i class="fa-solid fa-boxes-stacked"></i>
                    </button>
                </div>
            </form>
        </div>

        <button id='delete_category_button' style='display:none;' onclick="deleteCategory(this)">Delete</button>

        <div id="category_table_container">
            <% if (categories.length > 0) { %>
                <table id="category_table">
                    <tr>
                        <th>Category</th>
                        <th>Delete</th>
                    </tr>
                    <% categories.forEach(category => { %>
                        <tr class="category_info_row" user=<%= user._id %> category=<%= category._id %>  >
                            <td><%=category.name%></td>
                            <td>
                                <input class='category_delete_checkbox' type="checkbox" onclick="toggleDeleteButton(this)">
                            </td>
                        </tr>
                    <% }) %>
                </table>
            <% } %>
        </div>
                
    </div>
    
    
</body>
</html>




<!-- contains functions to work with tables -->
<script src="../../public/service/tableFunctions.js"></script>
<!-- contains functions to work with URLS -->
<script src="../../public/service/URLFunctions.js"></script>
    

<script>

//toggles a delete button to remove specific invoices
const toggleDeleteButton = () => {
        const deleteButton = document.getElementById('delete_category_button')
        const deleteCheckboxes = document.getElementsByClassName('category_delete_checkbox') //grabbing all our checkboxes as an array
        //looping through the checkboxes to see if any are checked
        toggleCheckboxButton(deleteCheckboxes, deleteButton, 'flex')
    }

const deleteCategory = async (e) => {

    //setting up our variables
    let url
    const categoryTable = document.getElementById('category_table')
    const categoryInfoRows = document.getElementsByClassName('category_info_row') //this row contains all category data

    //this function loops through the table and returns an array
    //the array will contain any rows which contain a checkbox matching the given classname
    const checkedRows = getCheckedRows(categoryInfoRows, 'category_delete_checkbox')

    //this function takes in an array of speicific rows and removes them
    //if the last row is removed, the given table is also removed
    removeRowsAndTable(checkedRows, categoryTable)

    //removing our delete button
    e.style.display = 'none'

    //looping through our rows (each representing a category) to call fetch requests for deletion
    for (x = 0; x < checkedRows.length; x++) {
            
            //getting our url based off our NODE_ENV
            url = getURL('/category/deleteCategory', {
                user: checkedRows[x].getAttribute('user'),
                category: checkedRows[x].getAttribute('category')
            })

            //calling our fetch request to delete the invoice/invoices
            const response = await fetch(url, {
                method:'DELETE'
            })
            const data = await response.json()

            console.log(data)
        }


    
}
</script>