<%- include('../partials/navbar.ejs') %>

<h1>Invoice Page</h1>
<h2>Add a New Invoice</h2>
<form action="/invoice/addInvoice" method="POST">
    <label for="invoice_name">Invoice Name</label>
    <input type="text" name="invoice_name">
    <label for="invoice_description">Invoice Description</label>
    <textarea type="text" name="invoice_description"></textarea>
    <input type="hidden" name="invoice_date" id="invoice_date">
    <input type="hidden" name="_csrf" value=<%=csrfToken%>>
    <button onclick="loadDate(this)">Submit</button>
</form>

<button style=display:none; id="delete_invoice_button" onclick="deleteInvoices(this, '<%= NODE_ENV %>')">Delete</button>

<% if (invoices.length > 0) { %>
    <table id="invoice_table">
        <tr>
            <th>Name</th>
            <th>Date Created</th>
            <th>Description</th>
            <th>Cost</th>
            <th>Delete</th>
        </tr>
        <% invoices.forEach(invoice => { %>
            <tr class="invoice_info_row" invoice=<%= invoice._id %> >
                <% if (NODE_ENV == 'development') { %>
                    <td><a href=<%= 'http://localhost:5000/invoice/' + String(invoice._id) %>><%= invoice.name %> </a></td>
                <% } else { %>
                    <!-- enter production a tag here with production url -->
                <% } %>
                <td><%=invoice.date%></td>
                <td><%=invoice.description%></td>
                <td>$<%=invoice.cost %> </td>
                <td>
                    <input class='invoice_delete_checkbox' onclick="toggledDeleteButton()" type="checkbox">
                </td>
            </tr>
        <% }) %>
    </table>
<% } %>

<!-- contains functions to work with tables -->
<script src="../../public/service/tableFunctions.js"></script>
<!-- contains functions to work with URLS -->
<script src="../../public/service/URLFunctions.js"></script>


<script>
    
    //automatically places todays date into the date created section for us
    //formats it the way we like
    const loadDate = () => {
        const dateInput = document.getElementById('invoice_date')
        const date = new Date()
        const todaysDate = String( Number(date.getMonth()+1) + "/" + date.getDate() + "/" + date.getFullYear())
        dateInput.value = todaysDate
    }

    //toggles a delete button to remove specific invoices
    const toggledDeleteButton = () => {
        const deleteButton = document.getElementById('delete_invoice_button')
        const deleteCheckboxes = document.getElementsByClassName('invoice_delete_checkbox') //grabbing all our checkboxes as an array
        //looping through the checkboxes to see if any are checked
        toggleCheckboxButton(deleteCheckboxes, deleteButton, 'flex')
    }

    //deletes the checked invoice
    const deleteInvoices = async (e, env) => {

        let url //will hold the url to delete invoices
        const invoiceTable = document.getElementById('invoice_table')
        const invoiceInfoRows = document.getElementsByClassName('invoice_info_row') //this row contains all invoice data

        //this function loops through the table and returns an array
        //the array will contain any rows which contain a checkbox matching the given classname
        const checkedRows = getCheckedRows(invoiceInfoRows, 'invoice_delete_checkbox')

        //this function takes in an array of speicific rows and removes them
        //if the last row is removed, the given table is also removed
        removeRowsAndTable(checkedRows, invoiceTable)

        //removing our delete button
        e.style.display = 'none'

        //looping through our rows (each representing an invoice) to call fetch requests for deletion
        for (x = 0; x < checkedRows.length; x++) {
            
            //getting our url based off our NODE_ENV
            url = getURL(env, '/invoice/deleteInvoice', {
                user: checkedRows[x].getAttribute('invoice')
            })

            //calling our fetch request to delete the invoice/invoices
            const response = await fetch(url, {
                method:'DELETE'
            })
            const data = await response.json()

            console.log(data)
        }

    }

</script>